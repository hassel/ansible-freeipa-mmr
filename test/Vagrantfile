VAGRANTFILE_API_VERSION = "2"
VAGRANT_IMAGE = "generic/ubuntu1710"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = VAGRANT_IMAGE

  config.vm.define "ipa1", primary: true do |web|
    config.vm.hostname = "ipa1.test.fuketsu.se"
    config.vm.network "private_network", ip: "192.168.33.11"
    config.vm.provision "shell", inline: <<-SHELL
      apt update
      apt install python -y
    SHELL
  
    config.vm.provision :ansible do |ansible|
          ansible.playbook = "./ipa1.yml"
          ansible.raw_arguments = ["--become"]
          ansible.groups = {
           "ipa-mmr" => ["ipa1",],
           "ipa-mmr:vars" => {
               "domain_name"         => "test.fuketsu.se",
               "realm_name"          => "test.fuketsu.se",
               "ds_admin_password"   => "mekmitasdigoat1234",
               "ipa_admin_password"  => "mekmitasdigoat5678",
           } 
          }
    end
  end


  config.vm.define "ipa2" do |db|
    config.vm.hostname = "ipa2.test.fuketsu.se"
    config.vm.network "private_network", ip: "192.168.33.12"
    config.vm.provision "shell", inline: <<-SHELL
      apt update
      apt install python -y
      /usr/bin/printf '192.168.33.11 ipa1.test.fuketsu.se\n' >> /etc/hosts
    SHELL
 
    config.vm.provision :ansible do |ansible|
          ansible.playbook = "./ipa2.yml"
          ansible.raw_arguments = ["--become"]
          ansible.groups = {
           "ipa-mmr" => ["ipa2",],
           "ipa-mmr:vars" => {
               "domain_name"         => "test.fuketsu.se",
               "realm_name"          => "test.fuketsu.se",
               "ds_admin_password"   => "mekmitasdigoat1234",
               "ipa_admin_password"  => "mekmitasdigoat5678",
               "ipa_type"            => "replica",
               "ipa_supplier"        => "ipa1.test.fuketsu.se",
           } 
          }

    end
  end

#  config.vm.define "ipa3" do |db|
#    config.vm.hostname = "ipa3.test.fuketsu.se"
#    config.vm.network "private_network", ip: "192.168.33.13"
#
#    config.vm.provision "shell", inline: <<-SHELL
#      apt update
#      apt install python -y
#    SHELL
#    config.vm.provision :ansible do |ansible|
#          ansible.playbook = "./ipa3.yml"
#          ansible.raw_arguments = ["--become"]
#    end
#  end
end
